@model MovieReview.Models.ViewPage

@inject IConfiguration _configuration

@functions{
    public string? ValidateUserToken(string token)
    {
        if (string.IsNullOrWhiteSpace(token))
    {
        return null;
    }

        var tokenHandler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        var key = new Microsoft.IdentityModel.Tokens.SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(_configuration.GetSection("AppSettings:Token").Value!));

        var validationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters
            {
                ValidateIssuer = false,
                ValidateAudience = false,
                ValidateLifetime = true,
                ClockSkew = TimeSpan.Zero,
                IssuerSigningKey = key
            };

        Microsoft.IdentityModel.Tokens.SecurityToken validatedToken;
        var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);
        string role = principal.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value!;
        return role;
        }
        public string? ValidateUserEmailToken(string token)
    {
        if (string.IsNullOrWhiteSpace(token))
    {
        return null;
    }

        var tokenHandler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        var key = new Microsoft.IdentityModel.Tokens.SymmetricSecurityKey(System.Text.Encoding.UTF8.GetBytes(_configuration.GetSection("AppSettings:Token").Value!));

        var validationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters
            {
                ValidateIssuer = false,
                ValidateAudience = false,
                ValidateLifetime = true,
                ClockSkew = TimeSpan.Zero,
                IssuerSigningKey = key
            };

        Microsoft.IdentityModel.Tokens.SecurityToken validatedToken;
        var principal = tokenHandler.ValidateToken(token, validationParameters, out validatedToken);
        string role = principal.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value!;
        return role;
        }
}
@{
    var tokenCookies = Context.Request.Cookies["Token"];
    
    var userRole = ValidateUserToken(tokenCookies);
    var userEmail = ValidateUserEmailToken(tokenCookies);
    
}
<head>
    <link rel="stylesheet" href="~/wwwroot/css/site.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body style="background-color:#A9A9A9">
    

    @if(Model!=null){

        <div class="top-container">
            
            <img class="details-img" src="@Model.movies.Poster" alt="Unavailable poster">
        </div>
        <div class="mid-container">
            <h1>@Model.movies.Title</h1>
            <p><strong>IMDB Ratings: </strong>@ViewBag.ImdbRating </p>
            <p><strong>Year:</strong> @Model.movies.Year</p>
            <p><strong>Rated:</strong> @Model.movies.Rated</p>
            @foreach(var item in @Model.movies.Genre)
            {
                <p><strong>Genre:</strong> @item</p>
            }

            <p><strong>Director:</strong> @Model.movies.Director</p>
            <p><strong>Actors:</strong> @Model.movies.Actors</p>
            <ul>
            @foreach(var ratings in ViewBag.PublicRating ){
                <li ><strong>@ratings.Source:</strong> @ratings.Value</li>
            }
            </ul>
            <p><strong>Plot: </strong>@Model.movies.Plot</p> 
        </div>
    


        <div style="padding:2rem 3rem">
            <h1 style="color:#1B262C">Reviews</h1>
        </div>
        @foreach(var review in Model.reviews){
            <ul>
                <li>
                    <div class="card" style="width: 30rem;">
                        <div class="card-body">
                            <h5>@for (var i = 1; i <= review.Ratings; i++)
                                {
                                    <i class="icon-star fa-sharp fa-solid fa-star"></i>
                                }
                            </h5>
                            @* <p>IMDB id: @ViewBag.ImdbRating</p> *@
                            <h5 class="card-title">@review.ReviewUser</h5>
                            <p class="card-subtitle mb-2 time text-muted">@review.CreatedAt</p>
                            <p class="card-text">@review.Content</p>
                        </div>
                        @if(userRole=="Admin" || userEmail == review.ReviewEmail)
                        {    
                            <form method="post" asp-controller="Review" asp-action="DeleteReview">
                                <input type="hidden" name="reviewId" value="@review.ReviewId"/>
                                <button class="btn btn-danger btn-sm"type="submit">Delete</button>
                            </form>
                        } 
                    </div>
                </li>
            </ul>
        }
    }
    <div class="container">
	    <div class="row" style="margin-top:40px;">
		    <div class="col-md-6">
    	        <div class="well well-sm">
                    <div class="text-right">
                        <a class="btn btn-success btn-green" href="#reviews-anchor" id="open-review-box">Leave a Review</a>
                    </div>
                <div class="row" id="post-review-box" style="display:none;">
                    <div class="col-md-12">
                        <form accept-charset="UTF-8" asp-action="CreateReview" asp-controller="Review" method="post">
                            @* <input id="" name="rating" > Leave a rating</input> *@
                            <input type="hidden" name="imdbID" value="@Model.movies.imdbID">
                            @* <input type="hidden" name="imdbID" value="@Model.user.UserId"> *@
                            <div class="review-content">
                                <label for="">Leave a review</label>
                                <input class="form-control animated" cols="50" id="new-review"name="Content"/>
                            </div>
                            @* <div class="review-rating">
                            <label for="">Rate this movie out of 5</label>
                            <input type="number" class="form-control animated" min="0" max="5" cols="6"name="Ratings"/>
                            </div> *@
                            <input type="hidden" id="rating" name="Ratings" value="-1">
                            <div class=star-rating>
                                <i class="fa-sharp fa-solid fa-star star-1" id="0" data-star="1"></i>
                                <i class="fa-sharp fa-solid fa-star star-2" id="1" data-star="2"></i>
                                <i class="fa-sharp fa-solid fa-star star-3" id="2" data-star="3"></i>
                                <i class="fa-sharp fa-solid fa-star star-4" id="3" data-star="4"></i>
                                <i class="fa-sharp fa-solid fa-star star-5" id="4" data-star="5"></i>
                            </div>
                            <input type="hidden" name="rating" id="rating" value="0">
                            <div class="text-right">
                                <a class="btn btn-danger btn-sm" href="#" id="close-review-box" style="display:none; margin-right: 10px;">
                                <span class="glyphicon glyphicon-remove"></span>Cancel</a>
                                <button class="btn btn-success btn-md" type="submit">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div> 
        </div>
	</div>


</body>
<script src="~/wwwroot/js/site.js"></script>

<!-- Add more movie details here -->
